@echo off
REM SprintSync Database Setup Script for Windows
REM This script helps you set up the PostgreSQL database for SprintSync

echo.
echo üöÄ SprintSync Database Setup
echo ==============================

REM Check if PostgreSQL is installed
where psql >nul 2>nul
if %ERRORLEVEL% NEQ 0 (
    echo ‚ùå PostgreSQL is not installed or not in PATH
    echo Please install PostgreSQL first:
    echo   - Download from https://www.postgresql.org/download/windows/
    echo   - Make sure to add PostgreSQL to your PATH during installation
    pause
    exit /b 1
)

echo ‚úÖ PostgreSQL found

REM Default values
set DB_NAME=sprintsync
set DB_USER=sprintsync_user
set POSTGRES_USER=postgres

REM Get database password
echo.
set /p DB_PASSWORD="üîê Enter password for database user '%DB_USER%': "

if "%DB_PASSWORD%"=="" (
    echo ‚ùå Password cannot be empty
    pause
    exit /b 1
)

echo üîÑ Setting up database...

REM Create database and user
echo üìù Creating database and user...
set PGPASSWORD=
psql -U %POSTGRES_USER% -h localhost -c "CREATE DATABASE %DB_NAME%; CREATE USER %DB_USER% WITH PASSWORD '%DB_PASSWORD%'; GRANT ALL PRIVILEGES ON DATABASE %DB_NAME% TO %DB_USER%;" 2>nul
if %ERRORLEVEL% NEQ 0 (
    echo ‚ö†Ô∏è  Database or user might already exist, continuing...
)

REM Grant additional permissions
echo üîë Setting up permissions...
set PGPASSWORD=
psql -U %POSTGRES_USER% -d %DB_NAME% -c "GRANT ALL ON SCHEMA public TO %DB_USER%; GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO %DB_USER%; GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO %DB_USER%;" 2>nul
if %ERRORLEVEL% NEQ 0 (
    echo ‚ö†Ô∏è  Permission setup completed with warnings
)

REM Run migrations
echo üìä Running database migrations...
if exist "SprintSync_App\src\database\migrations\001_initial_schema.sql" (
    set PGPASSWORD=%DB_PASSWORD%
    psql -U %DB_USER% -d %DB_NAME% -f "SprintSync_App\src\database\migrations\001_initial_schema.sql"
    echo ‚úÖ Schema migration completed
) else (
    echo ‚ö†Ô∏è  Migration file not found, using main schema...
    if exist "SprintSync_App\src\database\schema.sql" (
        set PGPASSWORD=%DB_PASSWORD%
        psql -U %DB_USER% -d %DB_NAME% -f "SprintSync_App\src\database\schema.sql"
        echo ‚úÖ Schema creation completed
    ) else (
        echo ‚ùå No schema file found!
        pause
        exit /b 1
    )
)

REM Load sample data
echo üìã Loading sample data...
if exist "SprintSync_App\src\database\sample-data.sql" (
    set PGPASSWORD=%DB_PASSWORD%
    psql -U %DB_USER% -d %DB_NAME% -f "SprintSync_App\src\database\sample-data.sql"
    echo ‚úÖ Sample data loaded
) else (
    echo ‚ö†Ô∏è  Sample data file not found, skipping...
)

REM Create .env file
echo üìù Creating environment configuration...
if exist "SprintSync_App\.env" (
    echo ‚ö†Ô∏è  .env file already exists, creating .env.new instead
    set ENV_FILE=SprintSync_App\.env.new
) else (
    set ENV_FILE=SprintSync_App\.env
)

(
echo # SprintSync Environment Configuration
echo # Generated by setup script on %date% %time%
echo.
echo # Database Configuration
echo DB_HOST=localhost
echo DB_PORT=5432
echo DB_NAME=%DB_NAME%
echo DB_USER=%DB_USER%
echo DB_PASSWORD=%DB_PASSWORD%
echo DB_SSL=false
echo.
echo # Application Configuration
echo NODE_ENV=development
echo PORT=3000
echo API_BASE_URL=http://localhost:3000
echo.
echo # JWT Configuration
echo JWT_SECRET=change_this_jwt_secret_key_in_production_min_32_chars
echo JWT_EXPIRES_IN=24h
echo.
echo # CORS Configuration
echo CORS_ORIGIN=http://localhost:3000
) > "%ENV_FILE%"

echo ‚úÖ Environment file created: %ENV_FILE%

REM Test connection
echo üß™ Testing database connection...
if exist "SprintSync_App\test-db-connection.js" (
    cd SprintSync_App
    where node >nul 2>nul
    if %ERRORLEVEL% EQU 0 (
        REM Install dependencies if needed
        if not exist "node_modules" (
            echo üì¶ Installing dependencies...
            npm install pg dotenv
        )
        
        REM Set environment variables and test
        set DB_HOST=localhost
        set DB_PORT=5432
        set DB_NAME=%DB_NAME%
        set DB_USER=%DB_USER%
        set DB_PASSWORD=%DB_PASSWORD%
        set DB_SSL=false
        
        node test-db-connection.js
    ) else (
        echo ‚ö†Ô∏è  Node.js not found, skipping connection test
        echo You can test the connection later by running:
        echo   cd SprintSync_App ^&^& node test-db-connection.js
    )
    cd ..
) else (
    echo ‚ö†Ô∏è  Test script not found, skipping connection test
)

echo.
echo üéâ Database setup completed!
echo.
echo Next steps:
echo 1. Copy the environment file if needed:
if "%ENV_FILE%"=="SprintSync_App\.env.new" (
    echo    copy SprintSync_App\.env.new SprintSync_App\.env
)
echo 2. Install Node.js dependencies:
echo    cd SprintSync_App ^&^& npm install pg dotenv
echo 3. Test your application with the database
echo.
echo Database connection details:
echo   Host: localhost
echo   Port: 5432
echo   Database: %DB_NAME%
echo   User: %DB_USER%
echo.
echo Happy coding! üöÄ
pause
