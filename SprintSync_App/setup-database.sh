#!/bin/bash

# SprintSync Database Setup Script
# This script helps you set up the PostgreSQL database for SprintSync

set -e  # Exit on any error

echo "üöÄ SprintSync Database Setup"
echo "=============================="

# Check if PostgreSQL is installed
if ! command -v psql &> /dev/null; then
    echo "‚ùå PostgreSQL is not installed or not in PATH"
    echo "Please install PostgreSQL first:"
    echo "  - Ubuntu/Debian: sudo apt-get install postgresql postgresql-contrib"
    echo "  - macOS: brew install postgresql"
    echo "  - Windows: Download from https://www.postgresql.org/download/"
    exit 1
fi

echo "‚úÖ PostgreSQL found"

# Default values
DB_NAME="sprintsync"
DB_USER="sprintsync_user"
DB_PASSWORD=""
POSTGRES_USER="postgres"

# Get database password
echo ""
read -s -p "üîê Enter password for database user '$DB_USER': " DB_PASSWORD
echo ""

if [ -z "$DB_PASSWORD" ]; then
    echo "‚ùå Password cannot be empty"
    exit 1
fi

echo "üîÑ Setting up database..."

# Create database and user
echo "üìù Creating database and user..."
PGPASSWORD="" psql -U $POSTGRES_USER -h localhost -c "
CREATE DATABASE $DB_NAME;
CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';
GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;
" 2>/dev/null || {
    echo "‚ö†Ô∏è  Database or user might already exist, continuing..."
}

# Grant additional permissions
echo "üîë Setting up permissions..."
PGPASSWORD="" psql -U $POSTGRES_USER -d $DB_NAME -c "
GRANT ALL ON SCHEMA public TO $DB_USER;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $DB_USER;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO $DB_USER;
" 2>/dev/null || {
    echo "‚ö†Ô∏è  Permission setup completed with warnings"
}

# Run migrations
echo "üìä Running database migrations..."
if [ -f "SprintSync_App/src/database/migrations/001_initial_schema.sql" ]; then
    PGPASSWORD="$DB_PASSWORD" psql -U $DB_USER -d $DB_NAME -f "SprintSync_App/src/database/migrations/001_initial_schema.sql"
    echo "‚úÖ Schema migration completed"
else
    echo "‚ö†Ô∏è  Migration file not found, using main schema..."
    if [ -f "SprintSync_App/src/database/schema.sql" ]; then
        PGPASSWORD="$DB_PASSWORD" psql -U $DB_USER -d $DB_NAME -f "SprintSync_App/src/database/schema.sql"
        echo "‚úÖ Schema creation completed"
    else
        echo "‚ùå No schema file found!"
        exit 1
    fi
fi

# Load sample data
echo "üìã Loading sample data..."
if [ -f "SprintSync_App/src/database/sample-data.sql" ]; then
    PGPASSWORD="$DB_PASSWORD" psql -U $DB_USER -d $DB_NAME -f "SprintSync_App/src/database/sample-data.sql"
    echo "‚úÖ Sample data loaded"
else
    echo "‚ö†Ô∏è  Sample data file not found, skipping..."
fi

# Create .env file
echo "üìù Creating environment configuration..."
if [ -f "SprintSync_App/.env" ]; then
    echo "‚ö†Ô∏è  .env file already exists, creating .env.new instead"
    ENV_FILE="SprintSync_App/.env.new"
else
    ENV_FILE="SprintSync_App/.env"
fi

cat > "$ENV_FILE" << EOF
# SprintSync Environment Configuration
# Generated by setup script on $(date)

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=$DB_NAME
DB_USER=$DB_USER
DB_PASSWORD=$DB_PASSWORD
DB_SSL=false

# Application Configuration
NODE_ENV=development
PORT=3000
API_BASE_URL=http://localhost:3000

# JWT Configuration
JWT_SECRET=$(openssl rand -base64 32 2>/dev/null || echo "change_this_jwt_secret_key_in_production")
JWT_EXPIRES_IN=24h

# CORS Configuration
CORS_ORIGIN=http://localhost:3000
EOF

echo "‚úÖ Environment file created: $ENV_FILE"

# Test connection
echo "üß™ Testing database connection..."
if [ -f "SprintSync_App/test-db-connection.js" ]; then
    cd SprintSync_App
    if command -v node &> /dev/null; then
        # Install dependencies if needed
        if [ ! -d "node_modules" ]; then
            echo "üì¶ Installing dependencies..."
            npm install pg dotenv
        fi
        
        # Set environment variables and test
        export DB_HOST=localhost
        export DB_PORT=5432
        export DB_NAME=$DB_NAME
        export DB_USER=$DB_USER
        export DB_PASSWORD=$DB_PASSWORD
        export DB_SSL=false
        
        node test-db-connection.js
    else
        echo "‚ö†Ô∏è  Node.js not found, skipping connection test"
        echo "You can test the connection later by running:"
        echo "  cd SprintSync_App && node test-db-connection.js"
    fi
    cd ..
else
    echo "‚ö†Ô∏è  Test script not found, skipping connection test"
fi

echo ""
echo "üéâ Database setup completed!"
echo ""
echo "Next steps:"
echo "1. Copy the environment file if needed:"
if [ "$ENV_FILE" = "SprintSync_App/.env.new" ]; then
    echo "   mv SprintSync_App/.env.new SprintSync_App/.env"
fi
echo "2. Install Node.js dependencies:"
echo "   cd SprintSync_App && npm install pg dotenv"
echo "3. Test your application with the database"
echo ""
echo "Database connection details:"
echo "  Host: localhost"
echo "  Port: 5432"
echo "  Database: $DB_NAME"
echo "  User: $DB_USER"
echo ""
echo "Happy coding! üöÄ"
